// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract SmartContract {
    // State variable to store a balance
    uint256 public balance;

    // View function to get the current balance
    function getBalance() public view returns (uint256) {
        return balance;
    }

    // Pure function to add two numbers without modifying state
    function addNumbers(uint256 a, uint256 b) public pure returns (uint256) {
        return a + b;
    }

    // Payable function to deposit funds into the contract
    function deposit() public payable {
        balance += msg.value;
    }

    // A function to withdraw funds
    function withdraw(uint256 amount) public {
        require(amount <= balance, "Insufficient balance");
        balance -= amount;
        payable(msg.sender).transfer(amount);
    }
}

// A derived contract that inherits from SmartContract
contract DerivedContract is SmartContract {
    // You can add more functions or variables specific to this contract
    // and still have access to the functions and variables from SmartContract.
}
